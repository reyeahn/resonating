rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Common function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Function to check if user is accessing their own data
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // Function to verify file size
    function isValidFileSize(maxSizeMB) {
      return request.resource.size < maxSizeMB * 1024 * 1024;
    }
    
    // Function to verify file type
    function isImage() {
      return request.resource.contentType.matches('image/.*');
    }
    
    function isAudio() {
      return request.resource.contentType.matches('audio/.*');
    }
    
    // User profile pictures (new path for settings page)
    match /user-profiles/{userId} {
      // Anyone can view profile pictures
      allow read: if isAuthenticated();
      
      // Users can only upload their own profile pictures
      allow write: if isOwner(userId) && 
                    isImage() && 
                    isValidFileSize(5); // 5MB limit
    }
    
    // Profile images (original path)
    match /users/{userId}/profile/{fileName} {
      // Anyone can view profile images
      allow read: if isAuthenticated();
      
      // Users can only upload their own profile images
      allow write: if isOwner(userId) && 
                    isImage() && 
                    isValidFileSize(2); // 2MB limit
    }
    
    // Post media
    match /posts/{userId}/{postId}/{fileName} {
      // Anyone can view post media
      allow read: if isAuthenticated();
      
      // Users can only upload to their own post directory
      allow create: if isOwner(userId) && 
                     (isImage() || isAudio()) && 
                     isValidFileSize(5); // 5MB limit
      
      // Prevent updates to already uploaded media
      allow update: if false;
      
      // Users can delete their own post media
      allow delete: if isOwner(userId);
    }
    
    // Temporary uploads (for processing before saving)
    match /temp/{userId}/{fileName} {
      // Only the owner can access temp files
      allow read: if isOwner(userId);
      
      // Users can upload temporary files
      allow create: if isOwner(userId) && 
                     (isImage() || isAudio()) && 
                     isValidFileSize(10); // 10MB limit
      
      // Allow update and delete of temp files
      allow update, delete: if isOwner(userId);
    }
    
    // Default deny
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
} 